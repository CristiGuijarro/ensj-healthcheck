<?xml version="1.0"?>
<project name="ConfigurableTestRunner" default="compile" basedir="..">

	<property file="buildfiles/build.properties" />
	<import   file = "build.checkoutDependencies.xml"       />

        <path id="compile.classpath">
                <pathelement location="${class.dir}" />
                <pathelement location="${lib.dir.devel}/stringtemplate-3.2.1.jar" />
                <pathelement location="${lib.dir.devel}/antlr-2.7.7.jar" />
                <fileset dir="${lib.dir.runtime}" includes="*.jar" />
        </path>

        <path id="run.classpath">
                <pathelement location="${resources.runtime}" />
                <path refid="compile.classpath" />
        </path>

        <path id="test.classpath">
                <path refid="compile.classpath" />
                <pathelement location="${test.class.dir}" />
                <pathelement location="${test.dir}/testData" />
        </path>

        <path id="sourcepath.code">
                <pathelement location="${src.java.dir}"     />
        </path>

        <target 
		name        = "docs" 
		description = "Creates technical documentation for the testgroups."
		depends     = "doc_overview, javadoc.api"
	/>	

        <target name="javadoc.api" description="Creates javadoc documentation.">	
		<mkdir dir="docs/api"/>
		<javadoc
			destdir       = "docs/api"
			author        = "true"
			version       = "true"
			use           = "true"
			sourcepathref = "sourcepath.code"
			classpathref  = "compile.classpath"
			excludepackagenames = "org.ensembl.healthcheck.test.*"
			windowtitle   = "EG Healthchecks">
			<fileset dir="${src.java.dir}" defaultexcludes="yes" />
		</javadoc>
	</target>

        <target name="javadoc.uml.api" description="An alternative to javadoc.api that creates javadoc documentation with uml inheritance diagrams. Requires the program dot to be installed.">
		<mkdir dir="docs/api"/>
		<javadoc
			destdir       = "docs/api"
			author        = "true"
			version       = "true"
			use           = "true"
			sourcepathref = "sourcepath.code"
			classpathref  = "compile.classpath"
			excludepackagenames = "org.ensembl.healthcheck.test.*"
			windowtitle   = "EG Healthchecks">
			<fileset dir="${src.java.dir}" defaultexcludes="yes" />
			<doclet  name="org.umlgraph.doclet.UmlGraphDoc" path="${lib.dir.devel}/UmlGraph-5.3.jar" >
				<param name="-inferrel" />
				<param name="-inferdep" />
				<param name="-hide"         value="java.*"      />
				<param name="-collpackages" value="java.util.*" />
				<param name="-postfixpackage" />
				<param name="-qualify" />
				<param name="-attributes" />
				<param name="-operations" />
				<param name="-enumerations" />
				<param name="-enumconstants" />
				<param name="-visibility" />
			</doclet>
		</javadoc>
	</target>

        <target name="doc_overview" description="Copies static content for the docs.">	
		<copy 
			todir = "${automatic_documentation}">
			<fileset dir="${resources.docs}/static/"/>
		</copy>
	</target>

        <target name="init">
                <mkdir dir="${class.dir}"/>
                <mkdir dir="${test.class.dir}"/>
        </target>

        <target name="clean" description="Erases contents of classes dir">
                <delete dir="${class.dir}"               />
                <delete dir="${test.class.dir}"          />
                <delete dir="${automatic_documentation}" />
        </target>

        <target name="run" depends="compile" description="Runs the ConfigurableTestRunner using the command line arguments stored in cmdline.">
		<echo>Running ${cmdline}</echo>
		<echo>Logging to ${logConfig}</echo>
                <java 
                        classname    = "org.ensembl.healthcheck.ConfigurableTestRunner" 
                        fork         = "true"
                        classpathref = "run.classpath"
                >
			<arg    line = "${cmdline}" />
			<jvmarg line = "-Djava.util.logging.config.file=${logConfig}" />

                </java>
        </target>

        <target name="run.createTestGroupsFromScratch" depends="compile" description="Builds testgroups from the groups as which testcases register">
                <java 
                        classname    = "org.ensembl.healthcheck.TestsInGroups" 
                        fork         = "true"
                        classpathref = "compile.classpath"
                >
			<arg    line = "org.ensembl.healthcheck.testcase src/ org.ensembl.healthcheck.testgroup" />
			<jvmarg line = "-Djava.util.logging.config.file=${logConfig}" />
                </java>
        </target>
</project>

