=pod 
=head1 NAME
    Bio::EnsEMBL::Hive::PipeConfig::TableDumperZipper_conf
=head1 SYNOPSIS
    init_pipeline.pl Bio::EnsEMBL::Hive::PipeConfig::TableDumperZipper_conf -password $ENSADMIN_PSW -db_conn "mysql://ensadmin:${ENSADMIN_PSW}@localhost/lg4_long_mult"
    seed_pipeline.pl -url "mysql://ensadmin:${ENSADMIN_PSW}@localhost:3306/lg4_zip_tables" -logic_name find_tables -input_id "{'only_tables' => '%_result'}"
    runWorker.pl -url mysql://ensadmin:${ENSADMIN_PSW}@localhost:3306/lg4_zip_tables
    runWorker.pl -url mysql://ensadmin:${ENSADMIN_PSW}@localhost:3306/lg4_zip_tables
    runWorker.pl -url mysql://ensadmin:${ENSADMIN_PSW}@localhost:3306/lg4_zip_tables
=head1 DESCRIPTION  
    This is an example pipeline put together from three analyses (with pre-existing Runnables) :
    Analysis_1: JobFactory.pm is used to turn the list of tables of the given database into jobs
        these jobs are sent down the branch #2 into the second analysis
    Analysis_2: SystemCmd.pm is used to dump individual tables; each flows via branch #1 into Analysis_3
    Analysis_3: another instance of SystemCmd.pm is used to compress an individual table dump file
=head1 LICENSE
    Copyright [1999-2015] Wellcome Trust Sanger Institute and the EMBL-European Bioinformatics Institute
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
         http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software distributed under the License
    is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and limitations under the License.
=head1 CONTACT
    Please subscribe to the Hive mailing list:  http://listserver.ebi.ac.uk/mailman/listinfo/ehive-users  to discuss Hive-related questions or to be notified of our updates
=cut


package Bio::EnsEMBL::Healthcheck::Pipeline::RunHealthchecks_conf;

use strict;
use warnings;
use Data::Dumper;
use base ('Bio::EnsEMBL::Hive::PipeConfig::HiveGeneric_conf');  # All Hive databases configuration files should inherit from HiveGeneric, directly or indirectly

sub default_options {
    my ($self) = @_;
    return {
        %{$self->SUPER::default_options},
        'hc_conn'=>undef,
        'hc_cmd'=>undef,
        'division'=>undef
    }
}

=head2 pipeline_wide_parameters
=cut

sub pipeline_wide_parameters {
    my ($self) = @_;
    return {
        %{$self->SUPER::pipeline_wide_parameters}          # here we inherit anything from the base class, then add our own stuff
    };
}


=head2 pipeline_analyses
=cut

sub pipeline_analyses {
    my ($self) = @_;
    my $anal = [
        {   
            -logic_name => 'db_factory',
            -module     => 'Bio::EnsEMBL::Healthcheck::Pipeline::DatabaseJobFactory',
            -input_ids => [
                 {
                     'hc_conn'    => $self->o('hc_conn'),                        
                     'division'    => $self->o('division')                        
                 }
                ],
            -parameters => {
            },
            -flow_into => {
                1 => 'finish_session' ,
                2 => 'run_healthcheck'
            },
        },
        
        {   
            -logic_name    => 'run_healthcheck',
            -module        => 'Bio::EnsEMBL::Hive::RunnableDB::SystemCmd',
            -parameters    => {
                'cmd'        => $self->o('hc_cmd'),
            },
            -analysis_capacity => 10
        },
        {
            -logic_name => 'finish_session',
            -module => 'Bio::EnsEMBL::Hive::RunnableDB::SqlCmd',
            -parameters => {
                -db_conn => $self->o('hc_conn'),
                -sql => [
                     'update session set end_time=NOW() where session_id="#session_id#"',
                     'drop table hc_lock'
                    ]
            },
                    -wait_for => ['run_healthcheck']
        }
        ];
    return $anal;
}
1;
