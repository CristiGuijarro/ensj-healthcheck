<?xml version="1.0"?>

<!--

  Ant build file for the EnsEBML HealthCheck tool.

-->

<project default="compile" basedir=".">

  <property name="name" value="ensj-healthcheck" />
  <property name="version" value="0.1" />
  <property name="build.name" value="${name}-${version}" />
  <property name="build.compiler" value="modern" />

  <property name="src"                 location="src"/>
  <property name="build"               location="build"/>
  <property name="dist"                location="dist"/>
  <property name="doc"                 location="doc"/>
  <property name="lib"                 location="lib"/>
  <property name="test"                location="test"/>
  <property name="reports"             location="reports"/>
  <property name="reports.tests"       location="${reports}/tests"/>
  <property name="web.javadoc.dir"     location="/homes/glenn/public_html/javadoc"/>

  <!-- ################################################################################## -->
  <!-- Targets -->

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the directory structure -->
    <mkdir dir="${build}"/>
    <mkdir dir="${test}"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="${reports}"/>
    <mkdir dir="${reports.tests}"/>
  </target>

  <!-- ################################################################################## -->

  <target name="compile" depends="init" description="Compile the source " >
    <javac srcdir="${src}" destdir="${build}" excludes="**/*Test.*" >
    </javac>
  </target>

  <!-- ################################################################################## -->

  <target name="compile-test" depends="init" description="Compile the tests " >
    <javac srcdir="${src}" destdir="${test}" includes="**/*Test.*">
      <classpath>
        <pathelement path="${test}"/>
        <fileset dir="lib">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
    </javac>
  </target>

  <!-- ################################################################################## -->

  <target name="dist" depends="compile" description="generate the distribution" >
    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/${build.name}-${DSTAMP}.jar" basedir="${build}"/>
    <!-- Current version -->
    <copy file="${dist}/${build.name}-${DSTAMP}.jar" tofile="${dist}/ensj-healthcheck.jar"/>
  </target>

  <!-- ################################################################################## -->

  <target name="clean" description="Clean up" >
    <delete dir="${test}" />
    <delete dir="${reports}" />
    <delete dir="${doc}/javadoc" />
  </target>

  <target name="cleanall" depends="clean" description="Clean .class files out of src dir as well" >
    <fileset dir=".">
      <include name="**/*.class"/>
    </fileset>
  </target>
  
  <!-- ################################################################################## -->
  <!-- Run targets -->

  <target name="runh" depends="compile">
    <java classname="org.ensembl.healthcheck.TextTestRunner">
      <arg value="-h"/> 
      <classpath>
        <pathelement path="${build}"/>
        <fileset dir="lib">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
    </java>
  </target>
  
  <target name="runall" depends="compile">
    <java classname="org.ensembl.healthcheck.TextTestRunner">
      <arg value="all"/> 
      <classpath>
        <pathelement path="${build}"/>
        <fileset dir="${lib}">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
    </java>
  </target>

  <!-- ################################################################################## -->
  <target name="javadoc">

    <javadoc
      sourcepath="${src}"
      destdir="${doc}/javadoc"
      author="true"
      version="true"
      use="true"
      windowtitle="EnsEMBL HealthCheck"
      doctitle="EnsEMBL HealthCheck"
      packagenames="org.ensembl.healthcheck, org.ensembl.healthcheck.util"
      >
    </javadoc>
  </target>

  <target name="javadoc-tar" depends="javadoc">

    <tar tarfile="${dist}/ensj-healthcheck-javadoc.tar.gz" basedir="${doc}/javadoc" compression="gzip"/>
    
  </target>
  
  <target name="javadoc-web" depends="javadoc">

    <copy todir="${web.javadoc.dir}">
      <fileset dir="${doc}/javadoc">
        <include name="**/*.html"/>
      </fileset>
    </copy>
  
  </target>
  <!-- ################################################################################## -->

  <target name="test" depends="compile-test">

    <junit printsummary="yes" fork="yes" haltonfailure="no">
      <classpath>
        <pathelement path="${java.class.path}"/>
        <pathelement path="${test}"/>
        <pathelement location="${lib}/junit.jar"/>
      </classpath>
      <formatter type="xml"/>
      <batchtest fork="yes" todir="${reports.tests}">
        <fileset dir="${test}">
          <include name="**/*Test.class"/>
        </fileset>
      </batchtest>
    </junit>

    <antcall target="test-summary-impl"/>

  </target>

   <!-- ################################################################################## -->

  <!-- html summary of results -->
  <target name="test-summary" depends="init">
    <antcall target="test-summary-impl"/>
  </target>


  <!-- NOTE: "init" MUST be included by calling task, we can't incude
  it in a depends list here because that causes a problem with
  multiple calls to "available" task in "init" block -->
  
  <target name="test-summary-impl">
    <junitreport todir="${reports.tests}">
      <fileset dir="${reports.tests}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${reports.tests}/html"/>
    </junitreport>
  </target>

  <!-- ################################################################################## -->

</project>
