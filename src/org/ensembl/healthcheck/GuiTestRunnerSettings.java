/*
 * GuiTestRunnerSettings.java
 *
 * Created on April 2, 2003, 9:39 AM
 */

package org.ensembl.healthcheck;

import javax.swing.*;
import javax.swing.event.*;
import java.awt.*;
import java.awt.event.*;

/**
 *
 * @author  glenn
 */
public class GuiTestRunnerSettings extends javax.swing.JDialog {
  
  GuiTestRunnerFrame gtrf;
  GuiTestRunner guiTestRunner;
  
  /** Creates new form GuiTestRunnerSettings */
  public GuiTestRunnerSettings(GuiTestRunnerFrame parent, GuiTestRunner gtr, boolean modal) {
    super(parent, modal);
    this.gtrf = parent;
    this.guiTestRunner = gtr;
    initComponents();
    init();
    
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  private void initComponents() {//GEN-BEGIN:initComponents
    topPanel = new javax.swing.JPanel();
    centrePanel = new javax.swing.JPanel();
    regexpPanel = new javax.swing.JPanel();
    preFilterLabel = new javax.swing.JLabel();
    preFilterTextField = new javax.swing.JTextField();
    forcePanel = new javax.swing.JPanel();
    forceBox = new javax.swing.JCheckBox();
    threadsPanel = new javax.swing.JPanel();
    maxThreadsLabel = new javax.swing.JLabel();
    threadsSpinner = new javax.swing.JSpinner();
    bottomPanel = new javax.swing.JPanel();
    applyButton = new javax.swing.JButton();
    cancelButton = new javax.swing.JButton();
    
    addWindowListener(new java.awt.event.WindowAdapter() {
      public void windowClosing(java.awt.event.WindowEvent evt) {
        closeDialog(evt);
      }
    });
    
    getContentPane().add(topPanel, java.awt.BorderLayout.NORTH);
    
    centrePanel.setLayout(new javax.swing.BoxLayout(centrePanel, javax.swing.BoxLayout.Y_AXIS));
    
    centrePanel.setBorder(new javax.swing.border.TitledBorder("EnsEMBL HealthCheck Settings"));
    regexpPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
    
    preFilterLabel.setFont(new java.awt.Font("Dialog", 0, 12));
    preFilterLabel.setText("Pre-filter regexp: ");
    regexpPanel.add(preFilterLabel);
    
    preFilterTextField.setColumns(20);
    preFilterTextField.setText(".*_core_.*");
    preFilterTextField.setToolTipText("Regular expression to apply before test case's built-in regexp");
    regexpPanel.add(preFilterTextField);
    
    centrePanel.add(regexpPanel);
    
    forcePanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
    
    forceBox.setFont(new java.awt.Font("Dialog", 0, 12));
    forceBox.setText("Use only pre-filter regexp");
    forceBox.setToolTipText("If checked, only the pre-filter regexp is used.");
    forcePanel.add(forceBox);
    
    centrePanel.add(forcePanel);
    
    threadsPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
    
    maxThreadsLabel.setFont(new java.awt.Font("Dialog", 0, 12));
    maxThreadsLabel.setText("Maximum number of threads: ");
    threadsPanel.add(maxThreadsLabel);
    
    threadsSpinner.setFont(new java.awt.Font("Dialog", 0, 12));
    threadsSpinner.setToolTipText("Select the maximum number of threads to run");
    threadsPanel.add(threadsSpinner);
    
    centrePanel.add(threadsPanel);
    
    getContentPane().add(centrePanel, java.awt.BorderLayout.CENTER);
    
    bottomPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));
    
    applyButton.setText("Apply");
    applyButton.setToolTipText("Apply the current settings and return");
    bottomPanel.add(applyButton);
    
    cancelButton.setText("Cancel");
    cancelButton.setToolTipText("Return without applying settings");
    bottomPanel.add(cancelButton);
    
    getContentPane().add(bottomPanel, java.awt.BorderLayout.SOUTH);
    
    pack();
  }//GEN-END:initComponents
  
  /** Closes the dialog */
  private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
    setVisible(false);
    dispose();
  }//GEN-LAST:event_closeDialog
  
  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    new GuiTestRunnerSettings(null, null, true).show();
  }
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton applyButton;
  private javax.swing.JPanel bottomPanel;
  private javax.swing.JButton cancelButton;
  private javax.swing.JPanel centrePanel;
  private javax.swing.JCheckBox forceBox;
  private javax.swing.JPanel forcePanel;
  private javax.swing.JLabel maxThreadsLabel;
  private javax.swing.JLabel preFilterLabel;
  private javax.swing.JTextField preFilterTextField;
  private javax.swing.JPanel regexpPanel;
  private javax.swing.JPanel threadsPanel;
  private javax.swing.JSpinner threadsSpinner;
  private javax.swing.JPanel topPanel;
  // End of variables declaration//GEN-END:variables
  
  // -------------------------------------------------------------------------
  
  private void init() {
    
    final GuiTestRunnerFrame localParent = gtrf;
    final GuiTestRunner localGTR = guiTestRunner;

    preFilterTextField.setText(guiTestRunner.getPreFilterRegexp());
    forceBox.setSelected(guiTestRunner.getForceDatabases());
    
    threadsSpinner.setModel(new SpinnerNumberModel(guiTestRunner.getMaxThreads(), 0, 10, 1));
    
    cancelButton.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
        closeDialog(null);
      }
    });
    
    applyButton.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
        int spinnerValue = ((SpinnerNumberModel)threadsSpinner.getModel()).getNumber().intValue();
        localGTR.setPreFilterRegexp(preFilterTextField.getText());
        localGTR.setForceDatabases(forceBox.isEnabled());
        localGTR.setMaxThreads(spinnerValue);
        closeDialog(null);
      }
    });
    
  } // init
  
  // -------------------------------------------------------------------------
  
}
